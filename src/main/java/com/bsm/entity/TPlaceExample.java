package com.bsm.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TPlaceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_place
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_place
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_place
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public TPlaceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_place
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andHottimeIsNull() {
            addCriterion("hottime is null");
            return (Criteria) this;
        }

        public Criteria andHottimeIsNotNull() {
            addCriterion("hottime is not null");
            return (Criteria) this;
        }

        public Criteria andHottimeEqualTo(Date value) {
            addCriterion("hottime =", value, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeNotEqualTo(Date value) {
            addCriterion("hottime <>", value, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeGreaterThan(Date value) {
            addCriterion("hottime >", value, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeGreaterThanOrEqualTo(Date value) {
            addCriterion("hottime >=", value, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeLessThan(Date value) {
            addCriterion("hottime <", value, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeLessThanOrEqualTo(Date value) {
            addCriterion("hottime <=", value, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeIn(List<Date> values) {
            addCriterion("hottime in", values, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeNotIn(List<Date> values) {
            addCriterion("hottime not in", values, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeBetween(Date value1, Date value2) {
            addCriterion("hottime between", value1, value2, "hottime");
            return (Criteria) this;
        }

        public Criteria andHottimeNotBetween(Date value1, Date value2) {
            addCriterion("hottime not between", value1, value2, "hottime");
            return (Criteria) this;
        }

        public Criteria andHotticketIsNull() {
            addCriterion("hotticket is null");
            return (Criteria) this;
        }

        public Criteria andHotticketIsNotNull() {
            addCriterion("hotticket is not null");
            return (Criteria) this;
        }

        public Criteria andHotticketEqualTo(Double value) {
            addCriterion("hotticket =", value, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketNotEqualTo(Double value) {
            addCriterion("hotticket <>", value, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketGreaterThan(Double value) {
            addCriterion("hotticket >", value, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketGreaterThanOrEqualTo(Double value) {
            addCriterion("hotticket >=", value, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketLessThan(Double value) {
            addCriterion("hotticket <", value, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketLessThanOrEqualTo(Double value) {
            addCriterion("hotticket <=", value, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketIn(List<Double> values) {
            addCriterion("hotticket in", values, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketNotIn(List<Double> values) {
            addCriterion("hotticket not in", values, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketBetween(Double value1, Double value2) {
            addCriterion("hotticket between", value1, value2, "hotticket");
            return (Criteria) this;
        }

        public Criteria andHotticketNotBetween(Double value1, Double value2) {
            addCriterion("hotticket not between", value1, value2, "hotticket");
            return (Criteria) this;
        }

        public Criteria andDimticketIsNull() {
            addCriterion("dimticket is null");
            return (Criteria) this;
        }

        public Criteria andDimticketIsNotNull() {
            addCriterion("dimticket is not null");
            return (Criteria) this;
        }

        public Criteria andDimticketEqualTo(Double value) {
            addCriterion("dimticket =", value, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketNotEqualTo(Double value) {
            addCriterion("dimticket <>", value, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketGreaterThan(Double value) {
            addCriterion("dimticket >", value, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketGreaterThanOrEqualTo(Double value) {
            addCriterion("dimticket >=", value, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketLessThan(Double value) {
            addCriterion("dimticket <", value, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketLessThanOrEqualTo(Double value) {
            addCriterion("dimticket <=", value, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketIn(List<Double> values) {
            addCriterion("dimticket in", values, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketNotIn(List<Double> values) {
            addCriterion("dimticket not in", values, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketBetween(Double value1, Double value2) {
            addCriterion("dimticket between", value1, value2, "dimticket");
            return (Criteria) this;
        }

        public Criteria andDimticketNotBetween(Double value1, Double value2) {
            addCriterion("dimticket not between", value1, value2, "dimticket");
            return (Criteria) this;
        }

        public Criteria andProvinceidIsNull() {
            addCriterion("provinceid is null");
            return (Criteria) this;
        }

        public Criteria andProvinceidIsNotNull() {
            addCriterion("provinceid is not null");
            return (Criteria) this;
        }

        public Criteria andProvinceidEqualTo(Integer value) {
            addCriterion("provinceid =", value, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidNotEqualTo(Integer value) {
            addCriterion("provinceid <>", value, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidGreaterThan(Integer value) {
            addCriterion("provinceid >", value, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidGreaterThanOrEqualTo(Integer value) {
            addCriterion("provinceid >=", value, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidLessThan(Integer value) {
            addCriterion("provinceid <", value, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidLessThanOrEqualTo(Integer value) {
            addCriterion("provinceid <=", value, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidIn(List<Integer> values) {
            addCriterion("provinceid in", values, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidNotIn(List<Integer> values) {
            addCriterion("provinceid not in", values, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidBetween(Integer value1, Integer value2) {
            addCriterion("provinceid between", value1, value2, "provinceid");
            return (Criteria) this;
        }

        public Criteria andProvinceidNotBetween(Integer value1, Integer value2) {
            addCriterion("provinceid not between", value1, value2, "provinceid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_place
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_place
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}